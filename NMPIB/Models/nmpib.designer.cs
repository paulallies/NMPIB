#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NMPIB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="nmp")]
	public partial class nmpibDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Image(tbl_Image instance);
    partial void Updatetbl_Image(tbl_Image instance);
    partial void Deletetbl_Image(tbl_Image instance);
    partial void Inserttbl_publication(tbl_publication instance);
    partial void Updatetbl_publication(tbl_publication instance);
    partial void Deletetbl_publication(tbl_publication instance);
    partial void Inserttbl_user(tbl_user instance);
    partial void Updatetbl_user(tbl_user instance);
    partial void Deletetbl_user(tbl_user instance);
    partial void Inserttbl_roles2user(tbl_roles2user instance);
    partial void Updatetbl_roles2user(tbl_roles2user instance);
    partial void Deletetbl_roles2user(tbl_roles2user instance);
    partial void Inserttbl_role(tbl_role instance);
    partial void Updatetbl_role(tbl_role instance);
    partial void Deletetbl_role(tbl_role instance);
    #endregion
		
		public nmpibDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["nmpConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public nmpibDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public nmpibDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public nmpibDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public nmpibDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Image> tbl_Images
		{
			get
			{
				return this.GetTable<tbl_Image>();
			}
		}
		
		public System.Data.Linq.Table<tbl_publication> tbl_publications
		{
			get
			{
				return this.GetTable<tbl_publication>();
			}
		}
		
		public System.Data.Linq.Table<tbl_user> tbl_users
		{
			get
			{
				return this.GetTable<tbl_user>();
			}
		}
		
		public System.Data.Linq.Table<tbl_roles2user> tbl_roles2users
		{
			get
			{
				return this.GetTable<tbl_roles2user>();
			}
		}
		
		public System.Data.Linq.Table<tbl_role> tbl_roles
		{
			get
			{
				return this.GetTable<tbl_role>();
			}
		}
	}
	
	[Table(Name="dbo.tbl_Images")]
	public partial class tbl_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _magazine_id;
		
		private string _magazine_issue;
		
		private string _shoot_description;
		
		private System.Nullable<System.DateTime> _shoot_date;
		
		private string _description;
		
		private string _keywords;
		
		private System.Nullable<int> _photographer;
		
		private string _name;
		
		private string _thumb_location;
		
		private string _preview_location;
		
		private System.Nullable<System.DateTime> _date_uploaded;
		
		private System.Nullable<System.DateTime> _date_updated;
		
		private EntityRef<tbl_publication> _tbl_publication;
		
		private EntityRef<tbl_user> _tbl_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmagazine_idChanging(System.Nullable<int> value);
    partial void Onmagazine_idChanged();
    partial void Onmagazine_issueChanging(string value);
    partial void Onmagazine_issueChanged();
    partial void Onshoot_descriptionChanging(string value);
    partial void Onshoot_descriptionChanged();
    partial void Onshoot_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onshoot_dateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OnphotographerChanging(System.Nullable<int> value);
    partial void OnphotographerChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onthumb_locationChanging(string value);
    partial void Onthumb_locationChanged();
    partial void Onpreview_locationChanging(string value);
    partial void Onpreview_locationChanged();
    partial void Ondate_uploadedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_uploadedChanged();
    partial void Ondate_updatedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updatedChanged();
    #endregion
		
		public tbl_Image()
		{
			this._tbl_publication = default(EntityRef<tbl_publication>);
			this._tbl_user = default(EntityRef<tbl_user>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_magazine_id", DbType="Int")]
		public System.Nullable<int> magazine_id
		{
			get
			{
				return this._magazine_id;
			}
			set
			{
				if ((this._magazine_id != value))
				{
					if (this._tbl_publication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmagazine_idChanging(value);
					this.SendPropertyChanging();
					this._magazine_id = value;
					this.SendPropertyChanged("magazine_id");
					this.Onmagazine_idChanged();
				}
			}
		}
		
		[Column(Storage="_magazine_issue", DbType="VarChar(100)")]
		public string magazine_issue
		{
			get
			{
				return this._magazine_issue;
			}
			set
			{
				if ((this._magazine_issue != value))
				{
					this.Onmagazine_issueChanging(value);
					this.SendPropertyChanging();
					this._magazine_issue = value;
					this.SendPropertyChanged("magazine_issue");
					this.Onmagazine_issueChanged();
				}
			}
		}
		
		[Column(Storage="_shoot_description", DbType="VarChar(100)")]
		public string shoot_description
		{
			get
			{
				return this._shoot_description;
			}
			set
			{
				if ((this._shoot_description != value))
				{
					this.Onshoot_descriptionChanging(value);
					this.SendPropertyChanging();
					this._shoot_description = value;
					this.SendPropertyChanged("shoot_description");
					this.Onshoot_descriptionChanged();
				}
			}
		}
		
		[Column(Storage="_shoot_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> shoot_date
		{
			get
			{
				return this._shoot_date;
			}
			set
			{
				if ((this._shoot_date != value))
				{
					this.Onshoot_dateChanging(value);
					this.SendPropertyChanging();
					this._shoot_date = value;
					this.SendPropertyChanged("shoot_date");
					this.Onshoot_dateChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_keywords", DbType="VarChar(300)")]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[Column(Storage="_photographer", DbType="Int")]
		public System.Nullable<int> photographer
		{
			get
			{
				return this._photographer;
			}
			set
			{
				if ((this._photographer != value))
				{
					if (this._tbl_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnphotographerChanging(value);
					this.SendPropertyChanging();
					this._photographer = value;
					this.SendPropertyChanged("photographer");
					this.OnphotographerChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(100) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_thumb_location", DbType="VarChar(100)")]
		public string thumb_location
		{
			get
			{
				return this._thumb_location;
			}
			set
			{
				if ((this._thumb_location != value))
				{
					this.Onthumb_locationChanging(value);
					this.SendPropertyChanging();
					this._thumb_location = value;
					this.SendPropertyChanged("thumb_location");
					this.Onthumb_locationChanged();
				}
			}
		}
		
		[Column(Storage="_preview_location", DbType="VarChar(100)")]
		public string preview_location
		{
			get
			{
				return this._preview_location;
			}
			set
			{
				if ((this._preview_location != value))
				{
					this.Onpreview_locationChanging(value);
					this.SendPropertyChanging();
					this._preview_location = value;
					this.SendPropertyChanged("preview_location");
					this.Onpreview_locationChanged();
				}
			}
		}
		
		[Column(Storage="_date_uploaded", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_uploaded
		{
			get
			{
				return this._date_uploaded;
			}
			set
			{
				if ((this._date_uploaded != value))
				{
					this.Ondate_uploadedChanging(value);
					this.SendPropertyChanging();
					this._date_uploaded = value;
					this.SendPropertyChanged("date_uploaded");
					this.Ondate_uploadedChanged();
				}
			}
		}
		
		[Column(Storage="_date_updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_updated
		{
			get
			{
				return this._date_updated;
			}
			set
			{
				if ((this._date_updated != value))
				{
					this.Ondate_updatedChanging(value);
					this.SendPropertyChanging();
					this._date_updated = value;
					this.SendPropertyChanged("date_updated");
					this.Ondate_updatedChanged();
				}
			}
		}
		
		[Association(Name="tbl_publication_tbl_Image", Storage="_tbl_publication", ThisKey="magazine_id", OtherKey="id", IsForeignKey=true)]
		public tbl_publication tbl_publication
		{
			get
			{
				return this._tbl_publication.Entity;
			}
			set
			{
				tbl_publication previousValue = this._tbl_publication.Entity;
				if (((previousValue != value) 
							|| (this._tbl_publication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_publication.Entity = null;
						previousValue.tbl_Images.Remove(this);
					}
					this._tbl_publication.Entity = value;
					if ((value != null))
					{
						value.tbl_Images.Add(this);
						this._magazine_id = value.id;
					}
					else
					{
						this._magazine_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_publication");
				}
			}
		}
		
		[Association(Name="tbl_user_tbl_Image", Storage="_tbl_user", ThisKey="photographer", OtherKey="id", IsForeignKey=true)]
		public tbl_user tbl_user
		{
			get
			{
				return this._tbl_user.Entity;
			}
			set
			{
				tbl_user previousValue = this._tbl_user.Entity;
				if (((previousValue != value) 
							|| (this._tbl_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_user.Entity = null;
						previousValue.tbl_Images.Remove(this);
					}
					this._tbl_user.Entity = value;
					if ((value != null))
					{
						value.tbl_Images.Add(this);
						this._photographer = value.id;
					}
					else
					{
						this._photographer = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_publications")]
	public partial class tbl_publication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private bool _active;
		
		private EntitySet<tbl_Image> _tbl_Images;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public tbl_publication()
		{
			this._tbl_Images = new EntitySet<tbl_Image>(new Action<tbl_Image>(this.attach_tbl_Images), new Action<tbl_Image>(this.detach_tbl_Images));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Association(Name="tbl_publication_tbl_Image", Storage="_tbl_Images", ThisKey="id", OtherKey="magazine_id")]
		public EntitySet<tbl_Image> tbl_Images
		{
			get
			{
				return this._tbl_Images;
			}
			set
			{
				this._tbl_Images.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Images(tbl_Image entity)
		{
			this.SendPropertyChanging();
			entity.tbl_publication = this;
		}
		
		private void detach_tbl_Images(tbl_Image entity)
		{
			this.SendPropertyChanging();
			entity.tbl_publication = null;
		}
	}
	
	[Table(Name="dbo.tbl_users")]
	public partial class tbl_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private bool _Enabled;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<tbl_Image> _tbl_Images;
		
		private EntitySet<tbl_roles2user> _tbl_roles2users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public tbl_user()
		{
			this._tbl_Images = new EntitySet<tbl_Image>(new Action<tbl_Image>(this.attach_tbl_Images), new Action<tbl_Image>(this.detach_tbl_Images));
			this._tbl_roles2users = new EntitySet<tbl_roles2user>(new Action<tbl_roles2user>(this.attach_tbl_roles2users), new Action<tbl_roles2user>(this.detach_tbl_roles2users));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Association(Name="tbl_user_tbl_Image", Storage="_tbl_Images", ThisKey="id", OtherKey="photographer")]
		public EntitySet<tbl_Image> tbl_Images
		{
			get
			{
				return this._tbl_Images;
			}
			set
			{
				this._tbl_Images.Assign(value);
			}
		}
		
		[Association(Name="tbl_user_tbl_roles2user", Storage="_tbl_roles2users", ThisKey="id", OtherKey="UserID")]
		public EntitySet<tbl_roles2user> tbl_roles2users
		{
			get
			{
				return this._tbl_roles2users;
			}
			set
			{
				this._tbl_roles2users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Images(tbl_Image entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = this;
		}
		
		private void detach_tbl_Images(tbl_Image entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = null;
		}
		
		private void attach_tbl_roles2users(tbl_roles2user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = this;
		}
		
		private void detach_tbl_roles2users(tbl_roles2user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = null;
		}
	}
	
	[Table(Name="dbo.tbl_roles2users")]
	public partial class tbl_roles2user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _RoleID;
		
		private EntityRef<tbl_user> _tbl_user;
		
		private EntityRef<tbl_role> _tbl_role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public tbl_roles2user()
		{
			this._tbl_user = default(EntityRef<tbl_user>);
			this._tbl_role = default(EntityRef<tbl_role>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbl_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._tbl_role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Association(Name="tbl_user_tbl_roles2user", Storage="_tbl_user", ThisKey="UserID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_user tbl_user
		{
			get
			{
				return this._tbl_user.Entity;
			}
			set
			{
				tbl_user previousValue = this._tbl_user.Entity;
				if (((previousValue != value) 
							|| (this._tbl_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_user.Entity = null;
						previousValue.tbl_roles2users.Remove(this);
					}
					this._tbl_user.Entity = value;
					if ((value != null))
					{
						value.tbl_roles2users.Add(this);
						this._UserID = value.id;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tbl_user");
				}
			}
		}
		
		[Association(Name="tbl_role_tbl_roles2user", Storage="_tbl_role", ThisKey="RoleID", OtherKey="id", IsForeignKey=true)]
		public tbl_role tbl_role
		{
			get
			{
				return this._tbl_role.Entity;
			}
			set
			{
				tbl_role previousValue = this._tbl_role.Entity;
				if (((previousValue != value) 
							|| (this._tbl_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_role.Entity = null;
						previousValue.tbl_roles2users.Remove(this);
					}
					this._tbl_role.Entity = value;
					if ((value != null))
					{
						value.tbl_roles2users.Add(this);
						this._RoleID = value.id;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("tbl_role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_roles")]
	public partial class tbl_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _appid;
		
		private string _rolename;
		
		private System.Nullable<int> _displayorder;
		
		private EntitySet<tbl_roles2user> _tbl_roles2users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnappidChanging(System.Nullable<int> value);
    partial void OnappidChanged();
    partial void OnrolenameChanging(string value);
    partial void OnrolenameChanged();
    partial void OndisplayorderChanging(System.Nullable<int> value);
    partial void OndisplayorderChanged();
    #endregion
		
		public tbl_role()
		{
			this._tbl_roles2users = new EntitySet<tbl_roles2user>(new Action<tbl_roles2user>(this.attach_tbl_roles2users), new Action<tbl_roles2user>(this.detach_tbl_roles2users));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_appid", DbType="Int")]
		public System.Nullable<int> appid
		{
			get
			{
				return this._appid;
			}
			set
			{
				if ((this._appid != value))
				{
					this.OnappidChanging(value);
					this.SendPropertyChanging();
					this._appid = value;
					this.SendPropertyChanged("appid");
					this.OnappidChanged();
				}
			}
		}
		
		[Column(Storage="_rolename", DbType="VarChar(50)")]
		public string rolename
		{
			get
			{
				return this._rolename;
			}
			set
			{
				if ((this._rolename != value))
				{
					this.OnrolenameChanging(value);
					this.SendPropertyChanging();
					this._rolename = value;
					this.SendPropertyChanged("rolename");
					this.OnrolenameChanged();
				}
			}
		}
		
		[Column(Storage="_displayorder", DbType="Int")]
		public System.Nullable<int> displayorder
		{
			get
			{
				return this._displayorder;
			}
			set
			{
				if ((this._displayorder != value))
				{
					this.OndisplayorderChanging(value);
					this.SendPropertyChanging();
					this._displayorder = value;
					this.SendPropertyChanged("displayorder");
					this.OndisplayorderChanged();
				}
			}
		}
		
		[Association(Name="tbl_role_tbl_roles2user", Storage="_tbl_roles2users", ThisKey="id", OtherKey="RoleID")]
		public EntitySet<tbl_roles2user> tbl_roles2users
		{
			get
			{
				return this._tbl_roles2users;
			}
			set
			{
				this._tbl_roles2users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_roles2users(tbl_roles2user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_role = this;
		}
		
		private void detach_tbl_roles2users(tbl_roles2user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_role = null;
		}
	}
}
#pragma warning restore 1591
